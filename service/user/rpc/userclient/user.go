// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

//go:generate mockgen -destination ./user_mock.go -package userclient -source $GOFILE

package userclient

import (
	"context"

	"zero-gf-demo/service/user/rpc/user"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	IdReq         = user.IdReq
	UserInfoReply = user.UserInfoReply
	UserNameReq   = user.UserNameReq
	UserDetailRes = user.UserDetailRes

	User interface {
		// 通过id查询用户信息
		GetUser(ctx context.Context, in *IdReq) (*UserInfoReply, error)
		// 通过用户名查询用户
		GetUserByName(ctx context.Context, in *UserNameReq) (*UserDetailRes, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

// 通过id查询用户信息
func (m *defaultUser) GetUser(ctx context.Context, in *IdReq) (*UserInfoReply, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUser(ctx, in)
}

// 通过用户名查询用户
func (m *defaultUser) GetUserByName(ctx context.Context, in *UserNameReq) (*UserDetailRes, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserByName(ctx, in)
}
