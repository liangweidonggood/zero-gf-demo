// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IdReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdReq) Reset()         { *m = IdReq{} }
func (m *IdReq) String() string { return proto.CompactTextString(m) }
func (*IdReq) ProtoMessage()    {}
func (*IdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *IdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdReq.Unmarshal(m, b)
}
func (m *IdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdReq.Marshal(b, m, deterministic)
}
func (m *IdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdReq.Merge(m, src)
}
func (m *IdReq) XXX_Size() int {
	return xxx_messageInfo_IdReq.Size(m)
}
func (m *IdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IdReq.DiscardUnknown(m)
}

var xxx_messageInfo_IdReq proto.InternalMessageInfo

func (m *IdReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UserInfoReply struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Number               string   `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	Gender               string   `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfoReply) Reset()         { *m = UserInfoReply{} }
func (m *UserInfoReply) String() string { return proto.CompactTextString(m) }
func (*UserInfoReply) ProtoMessage()    {}
func (*UserInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *UserInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfoReply.Unmarshal(m, b)
}
func (m *UserInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfoReply.Marshal(b, m, deterministic)
}
func (m *UserInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfoReply.Merge(m, src)
}
func (m *UserInfoReply) XXX_Size() int {
	return xxx_messageInfo_UserInfoReply.Size(m)
}
func (m *UserInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfoReply proto.InternalMessageInfo

func (m *UserInfoReply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserInfoReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfoReply) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *UserInfoReply) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

type UserNameReq struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserNameReq) Reset()         { *m = UserNameReq{} }
func (m *UserNameReq) String() string { return proto.CompactTextString(m) }
func (*UserNameReq) ProtoMessage()    {}
func (*UserNameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *UserNameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserNameReq.Unmarshal(m, b)
}
func (m *UserNameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserNameReq.Marshal(b, m, deterministic)
}
func (m *UserNameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserNameReq.Merge(m, src)
}
func (m *UserNameReq) XXX_Size() int {
	return xxx_messageInfo_UserNameReq.Size(m)
}
func (m *UserNameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserNameReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserNameReq proto.InternalMessageInfo

func (m *UserNameReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type UserDetailRes struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Number               string   `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	Gender               string   `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Username             string   `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserDetailRes) Reset()         { *m = UserDetailRes{} }
func (m *UserDetailRes) String() string { return proto.CompactTextString(m) }
func (*UserDetailRes) ProtoMessage()    {}
func (*UserDetailRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *UserDetailRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserDetailRes.Unmarshal(m, b)
}
func (m *UserDetailRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserDetailRes.Marshal(b, m, deterministic)
}
func (m *UserDetailRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserDetailRes.Merge(m, src)
}
func (m *UserDetailRes) XXX_Size() int {
	return xxx_messageInfo_UserDetailRes.Size(m)
}
func (m *UserDetailRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UserDetailRes.DiscardUnknown(m)
}

var xxx_messageInfo_UserDetailRes proto.InternalMessageInfo

func (m *UserDetailRes) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserDetailRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserDetailRes) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *UserDetailRes) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *UserDetailRes) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserDetailRes) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func init() {
	proto.RegisterType((*IdReq)(nil), "user.IdReq")
	proto.RegisterType((*UserInfoReply)(nil), "user.UserInfoReply")
	proto.RegisterType((*UserNameReq)(nil), "user.UserNameReq")
	proto.RegisterType((*UserDetailRes)(nil), "user.userDetailRes")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x91, 0xcf, 0x4a, 0x03, 0x31,
	0x10, 0xc6, 0xc9, 0x76, 0xbb, 0xea, 0x94, 0x15, 0x1c, 0x41, 0x43, 0x4f, 0x65, 0x4f, 0x15, 0xa1,
	0x07, 0x3d, 0x78, 0x17, 0x2f, 0xbd, 0x78, 0x08, 0xf8, 0x00, 0x5b, 0x33, 0x96, 0x85, 0xfd, 0x67,
	0xb2, 0x45, 0xfa, 0x2c, 0xbe, 0xac, 0xcc, 0x64, 0x57, 0x89, 0xf7, 0xde, 0xe6, 0x9b, 0xf9, 0x92,
	0x7c, 0xf3, 0x0b, 0xc0, 0xc1, 0x93, 0xdb, 0xf4, 0xae, 0x1b, 0x3a, 0x4c, 0xb9, 0x2e, 0x6e, 0x61,
	0xbe, 0xb5, 0x86, 0x3e, 0xf1, 0x12, 0x92, 0xca, 0x6a, 0xb5, 0x52, 0xeb, 0x99, 0x49, 0x2a, 0x5b,
	0xbc, 0x43, 0xfe, 0xe6, 0xc9, 0x6d, 0xdb, 0x8f, 0xce, 0x50, 0x5f, 0x1f, 0xff, 0x1b, 0x10, 0x21,
	0x6d, 0xcb, 0x86, 0x74, 0xb2, 0x52, 0xeb, 0x0b, 0x23, 0x35, 0xde, 0x40, 0xd6, 0x1e, 0x9a, 0x1d,
	0x39, 0x3d, 0x93, 0xee, 0xa8, 0xb8, 0xbf, 0xa7, 0xd6, 0x92, 0xd3, 0x69, 0xe8, 0x07, 0x55, 0xdc,
	0xc1, 0x82, 0x1f, 0x79, 0x2d, 0x1b, 0xe2, 0x0c, 0x4b, 0x38, 0xe7, 0x50, 0x72, 0xad, 0x12, 0xe3,
	0xaf, 0x2e, 0xbe, 0x15, 0xe4, 0x2c, 0x5e, 0x68, 0x28, 0xab, 0xda, 0x90, 0x3f, 0x45, 0xa0, 0x28,
	0xc1, 0x3c, 0x4e, 0xc0, 0xb3, 0xbe, 0xf4, 0xfe, 0xab, 0x73, 0x56, 0x67, 0x61, 0x36, 0xe9, 0x87,
	0x1a, 0x04, 0x27, 0xde, 0xc3, 0xd9, 0x9e, 0x06, 0xde, 0x09, 0x17, 0x1b, 0x81, 0x2d, 0x74, 0x97,
	0xd7, 0x41, 0xc4, 0x44, 0x9f, 0x20, 0x1f, 0xcd, 0xcf, 0x47, 0x46, 0x80, 0x57, 0x7f, 0xae, 0x11,
	0xc9, 0x74, 0x30, 0xda, 0x7c, 0x97, 0xc9, 0x0f, 0x3e, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0xc4,
	0xa2, 0xf8, 0x18, 0xcf, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	//通过id查询用户信息
	GetUser(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*UserInfoReply, error)
	//通过用户名查询用户
	GetUserByName(ctx context.Context, in *UserNameReq, opts ...grpc.CallOption) (*UserDetailRes, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) GetUser(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*UserInfoReply, error) {
	out := new(UserInfoReply)
	err := c.cc.Invoke(ctx, "/user.user/getUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetUserByName(ctx context.Context, in *UserNameReq, opts ...grpc.CallOption) (*UserDetailRes, error) {
	out := new(UserDetailRes)
	err := c.cc.Invoke(ctx, "/user.user/getUserByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	//通过id查询用户信息
	GetUser(context.Context, *IdReq) (*UserInfoReply, error)
	//通过用户名查询用户
	GetUserByName(context.Context, *UserNameReq) (*UserDetailRes, error)
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) GetUser(ctx context.Context, req *IdReq) (*UserInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedUserServer) GetUserByName(ctx context.Context, req *UserNameReq) (*UserDetailRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserByName not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.user/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUser(ctx, req.(*IdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetUserByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUserByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.user/GetUserByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUserByName(ctx, req.(*UserNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.user",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getUser",
			Handler:    _User_GetUser_Handler,
		},
		{
			MethodName: "getUserByName",
			Handler:    _User_GetUserByName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
